{"ast":null,"code":"var _jsxFileName = \"/home/amit/Documents/Node/projects/urbanclap/client/src/components/UserForm.js\",\n  _s = $RefreshSig$();\n// client/src/components/UserForm.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserForm = () => {\n//   const [userData, setUserData] = useState({\n//     name: '',\n//     location: '',\n//     email:''\n//   });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n\n//       console.log(\"Entered server to save data of user.\")\n//       console.log('Sending request to:', 'http://localhost:5000/api/users'); // Add this line\n//       console.log('Form data to be sent:', userData); // Add this line\n\n//       const response = await axios.post('http://localhost:5000/api/users', userData);\n//       console.log('Form submitted successfully:', response.data);\n\n//      } \n//     catch (error) {\n//       console.error('Error submitting form:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>User Form</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"name\">Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"name\"\n//           value={userData.name}\n//           onChange={(e) => setUserData({ ...userData, name: e.target.value })}\n//         />\n//         <br />\n//         <label htmlFor=\"location\">Location:</label>\n//         <input\n//           type=\"text\"\n//           id=\"location\"\n//           value={userData.location}\n//           onChange={(e) => setUserData({ ...userData, location: e.target.value })}\n//         />\n//         <br />\n//         <label htmlFor=\"Email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           value={userData.email}\n//           onChange={(e) => setUserData({ ...userData, email: e.target.value })}\n//         />\n//                 <br />\n\n//        <br /> <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UserForm;\n\n// components/UserForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: '',\n    location: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Check if passwords match\n      if (userData.password !== userData.confirmPassword) {\n        console.error('Passwords do not match');\n        return;\n      }\n      const response = await axios.post('http://localhost:5000/api/users', userData);\n      console.log('Form submitted successfully:', response.data);\n\n      // Optionally, you can redirect or perform other actions after successful submission\n      navigate('/login');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle errors or display error messages to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          value: userData.name,\n          onChange: e => setUserData({\n            ...userData,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"location\",\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"location\",\n          value: userData.location,\n          onChange: e => setUserData({\n            ...userData,\n            location: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: userData.email,\n          onChange: e => setUserData({\n            ...userData,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: userData.password,\n          onChange: e => setUserData({\n            ...userData,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: userData.confirmPassword,\n          onChange: e => setUserData({\n            ...userData,\n            confirmPassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"btHxGhL8v6VWg6HtldqVLBY+Y7Y=\", false, function () {\n  return [useNavigate];\n});\n_c = UserForm;\nexport default UserForm;\n\n// const response = await axios.post('http://localhost:5000/api/users/register', userData);\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","UserForm","_s","userData","setUserData","name","location","email","password","confirmPassword","navigate","handleSubmit","e","preventDefault","console","error","response","post","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/amit/Documents/Node/projects/urbanclap/client/src/components/UserForm.js"],"sourcesContent":["// client/src/components/UserForm.js\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserForm = () => {\n//   const [userData, setUserData] = useState({\n//     name: '',\n//     location: '',\n//     email:''\n//   });\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n\n//       console.log(\"Entered server to save data of user.\")\n//       console.log('Sending request to:', 'http://localhost:5000/api/users'); // Add this line\n//       console.log('Form data to be sent:', userData); // Add this line\n\n//       const response = await axios.post('http://localhost:5000/api/users', userData);\n//       console.log('Form submitted successfully:', response.data);\n\n//      } \n//     catch (error) {\n//       console.error('Error submitting form:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>User Form</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label htmlFor=\"name\">Name:</label>\n//         <input\n//           type=\"text\"\n//           id=\"name\"\n//           value={userData.name}\n//           onChange={(e) => setUserData({ ...userData, name: e.target.value })}\n//         />\n//         <br />\n//         <label htmlFor=\"location\">Location:</label>\n//         <input\n//           type=\"text\"\n//           id=\"location\"\n//           value={userData.location}\n//           onChange={(e) => setUserData({ ...userData, location: e.target.value })}\n//         />\n//         <br />\n//         <label htmlFor=\"Email\">Email:</label>\n//         <input\n//           type=\"email\"\n//           id=\"email\"\n//           value={userData.email}\n//           onChange={(e) => setUserData({ ...userData, email: e.target.value })}\n//         />\n//                 <br />\n\n//        <br /> <button type=\"submit\">Submit</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UserForm;\n\n\n\n\n\n// components/UserForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserForm = () => {\n  const [userData, setUserData] = useState({\n    name: '',\n    location: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Check if passwords match\n      if (userData.password !== userData.confirmPassword) {\n        console.error('Passwords do not match');\n        return;\n      }\n\n      const response = await axios.post('http://localhost:5000/api/users', userData);\n      console.log('Form submitted successfully:', response.data);\n\n      // Optionally, you can redirect or perform other actions after successful submission\n      navigate('/login');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle errors or display error messages to the user\n    }\n  };\n\n  return (\n    <div>\n      <h2>Sign In</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-3\">\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={userData.name}\n          onChange={(e) => setUserData({ ...userData, name: e.target.value })}\n        />\n        </div>\n        <br />\n        <div className=\"mb-3\">\n        <label htmlFor=\"location\">Location:</label>\n        <input\n          type=\"text\"\n          id=\"location\"\n          value={userData.location}\n          onChange={(e) => setUserData({ ...userData, location: e.target.value })}\n        />\n        </div>\n        <br />\n        <div className=\"mb-3\">\n        <label htmlFor=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          value={userData.email}\n          onChange={(e) => setUserData({ ...userData, email: e.target.value })}\n        />\n        </div>\n        <br />\n        <div className=\"mb-3\">\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={userData.password}\n          onChange={(e) => setUserData({ ...userData, password: e.target.value })}\n        />\n        </div>\n        <br />\n        <div className=\"mb-3\">\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\n        <input\n          type=\"password\"\n          id=\"confirmPassword\"\n          value={userData.confirmPassword}\n          onChange={(e) => setUserData({ ...userData, confirmPassword: e.target.value })}\n        />\n        </div>\n        <br />\n        <button type=\"submit\">Register</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm;\n\n\n\n\n\n\n\n// const response = await axios.post('http://localhost:5000/api/users/register', userData);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}