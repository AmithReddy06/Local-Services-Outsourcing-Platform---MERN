{"ast":null,"code":"// // Payment.js\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import Razorpay from 'razorpay';\n\n// const PaymentPortal = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate(); // Updated line\n//   const [serviceProvider, setServiceProvider] = useState(null);\n\n//   useEffect(() => {\n//     const fetchServiceProviderDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/serviceproviders/${location.state.serviceProvider._id}`);\n//         setServiceProvider(response.data);\n//       } catch (error) {\n//         console.error('Error fetching service provider details:', error);\n//         // Handle error and redirect to a failure page if needed\n//         navigate('/payment-failure');\n//       }\n//     };\n\n//     fetchServiceProviderDetails();\n//   }, [location.state.serviceProvider._id, history]);\n\n//   useEffect(() => {\n//     if (serviceProvider) {\n//       const options = {\n//         key: 'rzp_test_dakXapuZkHuqrE',\n//         amount: serviceProvider.cost * 100,\n//         currency: 'INR',\n//         name: 'Your Company Name',\n//         description: 'Service Payment',\n//         image: 'https://your-logo-url.png',\n//         handler: async (response) => {\n//           try {\n//             // Payment success, update availability and navigate to success page\n//             await axios.put(`http://localhost:5000/api/serviceproviders/${serviceProvider._id}`, {\n//               isAvailable: false,\n//             });\n\n//             // Redirect to a success page or any other route\n//             history.push('/payment-success');\n//           } catch (error) {\n//             console.error('Error updating availability:', error);\n//             // Handle error and redirect to a failure page if needed\n//             history.push('/payment-failure');\n//           }\n//         },\n//         // ... (unchanged)\n//       };\n\n//       const rzp = new Razorpay(options);\n//       rzp.open();\n\n//       return () => {\n//         // Cleanup logic, if needed\n//       };\n//     }\n//   }, [serviceProvider, history]);\n\n//   return <div>Processing Payment...</div>;\n// };\n\n// export default PaymentPortal;","map":{"version":3,"names":[],"sources":["/home/amit/Documents/Node/projects/urban_clap_new/Local-Services-Outsourcing-Platform---MERN/client/src/components/PaymentPortal.js"],"sourcesContent":["// // Payment.js\n// import React, { useEffect, useState } from 'react';\n// import { useLocation, useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import Razorpay from 'razorpay';\n\n// const PaymentPortal = () => {\n//   const location = useLocation();\n//   const navigate = useNavigate(); // Updated line\n//   const [serviceProvider, setServiceProvider] = useState(null);\n\n//   useEffect(() => {\n//     const fetchServiceProviderDetails = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:5000/api/serviceproviders/${location.state.serviceProvider._id}`);\n//         setServiceProvider(response.data);\n//       } catch (error) {\n//         console.error('Error fetching service provider details:', error);\n//         // Handle error and redirect to a failure page if needed\n//         navigate('/payment-failure');\n//       }\n//     };\n\n//     fetchServiceProviderDetails();\n//   }, [location.state.serviceProvider._id, history]);\n\n//   useEffect(() => {\n//     if (serviceProvider) {\n//       const options = {\n//         key: 'rzp_test_dakXapuZkHuqrE',\n//         amount: serviceProvider.cost * 100,\n//         currency: 'INR',\n//         name: 'Your Company Name',\n//         description: 'Service Payment',\n//         image: 'https://your-logo-url.png',\n//         handler: async (response) => {\n//           try {\n//             // Payment success, update availability and navigate to success page\n//             await axios.put(`http://localhost:5000/api/serviceproviders/${serviceProvider._id}`, {\n//               isAvailable: false,\n//             });\n\n//             // Redirect to a success page or any other route\n//             history.push('/payment-success');\n//           } catch (error) {\n//             console.error('Error updating availability:', error);\n//             // Handle error and redirect to a failure page if needed\n//             history.push('/payment-failure');\n//           }\n//         },\n//         // ... (unchanged)\n//       };\n\n//       const rzp = new Razorpay(options);\n//       rzp.open();\n\n//       return () => {\n//         // Cleanup logic, if needed\n//       };\n//     }\n//   }, [serviceProvider, history]);\n\n//   return <div>Processing Payment...</div>;\n// };\n\n// export default PaymentPortal;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}