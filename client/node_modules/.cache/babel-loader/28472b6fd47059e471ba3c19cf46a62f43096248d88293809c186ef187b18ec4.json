{"ast":null,"code":"var _jsxFileName = \"/home/amit/Documents/Node/projects/urbanclap/client/src/components/UserForm.js\",\n  _s = $RefreshSig$();\n// client/src/components/UserForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: '',\n    location: '',\n    email: ''\n    // Add other user-related fields as needed\n  });\n  const history = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Make an HTTP request to send form data to the server\n      const response = await axios.post('/api/user', userData);\n      console.log('Form submitted successfully:', response.data);\n      // Optionally, you can perform additional actions after successful submission\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle errors or display error messages to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: userData.name,\n        onChange: e => setUserData({\n          ...userData,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: \"Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"location\",\n        value: userData.location,\n        onChange: e => setUserData({\n          ...userData,\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"Kt70NmAf6tkbM0eCjHRc2PJEmH4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","UserForm","_s","userData","setUserData","name","location","email","history","handleSubmit","e","preventDefault","response","post","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/amit/Documents/Node/projects/urbanclap/client/src/components/UserForm.js"],"sourcesContent":["// client/src/components/UserForm.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst UserForm = () => {\n  const [userData, setUserData] = useState({\n    name: '',\n    location: '',\n    email:''\n    // Add other user-related fields as needed\n  });\n  const history = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Make an HTTP request to send form data to the server\n      const response = await axios.post('/api/user', userData);\n\n      console.log('Form submitted successfully:', response.data);\n      // Optionally, you can perform additional actions after successful submission\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      // Handle errors or display error messages to the user\n    }\n  };\n\n  return (\n    <div>\n      <h2>User Form</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\">Name:</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={userData.name}\n          onChange={(e) => setUserData({ ...userData, name: e.target.value })}\n        />\n        <label htmlFor=\"location\">Location:</label>\n        <input\n          type=\"text\"\n          id=\"location\"\n          value={userData.location}\n          onChange={(e) => setUserData({ ...userData, location: e.target.value })}\n        />\n        {/* Add other input fields for user data as needed */}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default UserForm;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAC;IACN;EACF,CAAC,CAAC;EACF,MAAMC,OAAO,GAAGV,WAAW,CAAC,CAAC;EAE7B,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,WAAW,EAAEV,QAAQ,CAAC;MAExDW,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9C;IACF;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MAAMuB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BlB,OAAA;QAAOwB,OAAO,EAAC,MAAM;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnCtB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,MAAM;QACTC,KAAK,EAAExB,QAAQ,CAACE,IAAK;QACrBuB,QAAQ,EAAGlB,CAAC,IAAKN,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,IAAI,EAAEK,CAAC,CAACmB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACFtB,OAAA;QAAOwB,OAAO,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3CtB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,UAAU;QACbC,KAAK,EAAExB,QAAQ,CAACG,QAAS;QACzBsB,QAAQ,EAAGlB,CAAC,IAAKN,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,QAAQ,EAAEI,CAAC,CAACmB,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC,eAEFtB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,QAAQ;EAAA,QAOIH,WAAW;AAAA;AAAAgC,EAAA,GAPvB7B,QAAQ;AAgDd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}